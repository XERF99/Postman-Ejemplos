{
	"info": {
		"_postman_id": "e28be8e1-a5c5-4d17-aca8-d332e018b000",
		"name": "Demoblaze API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29356150"
	},
	"item": [
		{
			"name": "Crear un nuevo usuario en signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is empty\", function () {\r",
							"  var responseBody = pm.response.text().trim(); // Eliminar espacios en blanco y caracteres de nueva línea\r",
							"  pm.expect(responseBody).to.equal('\"\"');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.demoblaze.com/signup",
					"protocol": "https",
					"host": [
						"api",
						"demoblaze",
						"com"
					],
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Intentar crear un usuario ya existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Esta solicitud intenta crear el mismo usuario otra vez\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response contains expected error message\", function () {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData).to.be.an('object');\r",
							"  pm.expect(jsonData.errorMessage).to.include(\"This user already exist.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.demoblaze.com/signup",
					"protocol": "https",
					"host": [
						"api",
						"demoblaze",
						"com"
					],
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario y password correcto en login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains auth token\", function () {\r",
							"  var responseBody = pm.response.text();\r",
							"  pm.expect(responseBody).to.be.a('string');\r",
							"  pm.expect(responseBody).to.match(/Auth_token:.+/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.demoblaze.com/login",
					"protocol": "https",
					"host": [
						"api",
						"demoblaze",
						"com"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario y password incorrecto en login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200, 401]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected error message for 401\", function () {\r",
							"  if (pm.response.code === 401) {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('object');\r",
							"    pm.expect(jsonData.message).to.include(\"Invalid username or password\");\r",
							"  }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"usuarioIncorrecto\",\r\n  \"password\": \"contraseñaIncorrecta\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.demoblaze.com/login",
					"protocol": "https",
					"host": [
						"api",
						"demoblaze",
						"com"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Generar un nombre de usuario aleatorio\r",
					"const username = 'testuser_' + Math.floor(Math.random() * 10000);\r",
					"pm.environment.set('username', username);\r",
					"\r",
					"// Establecer una contraseña fija (puede ser aleatoria si es necesario)\r",
					"const password = 'contraseñaPrueba123!';\r",
					"pm.environment.set('password', password);\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}